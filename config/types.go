package config

import (
	"sync"

	"github.com/gobwas/ws"
)

type Endpoints map[string]string

type Packet struct {
	Data []byte
}

type FeedMap map[string][]chan Packet

type ClientMap map[string][]chan Packet

type ChannelDetails struct {
	Channel chan Packet
	From    string
	To      string
}

type Message struct {
	Sender ClientDetails
	Op     ws.OpCode
	Data   []byte //text data are converted to/from bytes as needed
}

type ClientDetails struct {
	Name         string
	Topic        string
	MessagesChan chan Message
}

// requests to add or delete subscribers are represented by this struct
type ClientAction struct {
	Action ClientActionType
	Client ClientDetails
}

// userActionType represents the type of of action requested
type ClientActionType int

// clientActionType constants
const (
	ClientAdd ClientActionType = iota
	ClientDelete
)

type TopicDirectory struct {
	sync.Mutex
	Directory map[string][]ClientDetails
}

// gobwas/ws
type ReadClientDataReturns struct {
	Msg []byte
	Op  ws.OpCode
	Err error
}

//https://mengzhuo.github.io/yaml-to-go/
type AutoGenerated struct {
	Capture struct {
		Commands []string `yaml:"commands"`
	} `yaml:"capture"`
	Control struct {
		Path   string `yaml:"path"`
		Scheme string `yaml:"scheme"`
	} `yaml:"control"`
	Core struct {
		Outurl     string      `yaml:"outurl"`
		Log        string      `yaml:"log"`
		RetryWait  int         `yaml:"retry_wait"`
		Strict     bool        `yaml:"strict"`
		Tuning     interface{} `yaml:"tuning"`
		BufferSize int         `yaml:"bufferSize"`
		Verbose    bool        `yaml:"verbose"`
	} `yaml:"core"`
	Variables struct {
		UUID    string `yaml:"uuid"`
		Session string `yaml:"session"`
	} `yaml:"variables"`
	Output struct {
		Streams []struct {
			To         string   `yaml:"to"`
			From       []string `yaml:"from"`
			InputNames []string
		} `yaml:"streams"`
	} `yaml:"output"`
}
